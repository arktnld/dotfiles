#!/bin/bash
# Simple retro game script
#

consoles=$(ls ~/Documents/Roms | sed ':a;N;$!ba;s/\n/, /g' | sed -E 's/(.*),/\1 and/')

### Functions ###

# Print help and List of Consoles
help () {
cat << EOF
  Usage: play [console]... [game]...
  Run retro games in a simple way.

  Advanced search        play [console]
  Search specific game   play [console] [game]

  Available consoles:
  $consoles

EOF

	exit 1
}

# Exit if an error occur
err () {
	printf "%s\n\n" "ERROR: $1 \"$2\" NOT FOUND, try again."
	exit 1
}

# Get search results
getsearch () {
	# build search for ag
	for w in $search; do
		i+="(?=.*\b$w\b)"
	done

	matchlist=$(ls $romsdir | ag --nocolor "^$i.*$")
	echo "$matchlist"
}

listgames() {
	selgame=$(command ls "$romsdir" | \
        sed 's/$/  /' | \
        smenu -k -d -t 5 -M -W $'\n' -n1000 -m "Advanced search for $console games:" | \
        xargs)
    [ -z "$selgame" ] && exit 1
	rungame "$selgame"
}

rungame() {
	game="$romsdir/$1"
    if [ "$console" == "psx" ]; then
        duckstation-qt "$game/$1.cue" \
            &> /dev/null 2>&1 & disown
    else
        mednafen -force_module "$console" "$game" \
            &> /dev/null 2>&1 & disown
    fi
}

getgame() {
	echo -e "\n$1" | nl
    printf "\n%s" "Choose an option (0 to exit) [0-$(echo "$1" | wc -l)]: "
	read -r sel
	limit=$(echo "$1" | wc -l)
	limitc=$(($(echo "$1" | wc -l)+1))
	while [ "$sel" == "" ] || [ -n "${sel##[0-9]*}" ] ||  [ "$sel" -le "-1" ] ||  [ "$sel" -ge $limitc ] ; do
		printf "\n%s" "Please, select a number 0 to $limit: "
		read -r sel
	done

	[ $sel == 0 ] && echo -e "No option selected, exiting...\n" && exit 1
	selgame=$(echo "$1" | sed -n "$sel"'p')

	rungame "$selgame"
}

console=$1
romsdir="$HOME/Documents/Roms/$1"; shift
search=$*

### Logic ###

# if no orgs are given, print help and exit.
[ -z "$console" ] && help

clear # Use all screen.

# exit if console folder don't exits.
[ ! -d "$romsdir" ] && err Folder "$console"

# get search matches, length and exit if search is zero
matches="$(getsearch)"
[ "$matches" == "" ] && err Game "$search"
[ -z "$search" ] && lenmatches=0 || lenmatches=$(echo "$matches"  | wc -l)

case $lenmatches in
	0) listgames ;;
	1) rungame "$matches" ;;
	*) getgame "$matches"
esac
