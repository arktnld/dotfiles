#!/bin/sh
# After install script
# Inspired by Larbs for Luke Smith


dotfilesrepo="https://github.com/arktnld/dotfiles.git"
progsfile="https://raw.githubusercontent.com/arktnld/dotfiles/master/.config/progs.csv"
aurhelper="trizen"
repobranch="master"
name="arktnld"




### FUNCTIONS ###

installpkg(){ pacman --noconfirm --needed -S "$1" >/dev/null 2>&1 ; }
error() { echo "ERROR: $1" ; exit 1; }
welcomemsg() { echo "Starting after install script."; }


refreshkeys() { \
	echo "Refreshing Arch Keyring..."
	pacman --noconfirm -S archlinux-keyring >/dev/null 2>&1
	}

newperms() { echo "$*" >> /etc/sudoers ; } # Set special sudoers settings for install (or after).

manualinstall() { # Installs $1 manually if not installed. Used only for AUR helper here.
	[ -f "/usr/bin/$1" ] || (
	echo "Manual Install \"$1\", an AUR helper..."
	cd /tmp || exit 1
	rm -rf /tmp/"$1"*
	sudo -u "$name" git clone https://aur.archlinux.org/"$1" >/dev/null 2>&1 &&
	cd "$1" &&
	sudo -u "$name" makepkg --noconfirm -si >/dev/null 2>&1 || return 1
	cd /tmp || return 1) ;
}

maininstall() { # Installs all needed programs from main repo.
	echo "Main Install $1, $2 "
	installpkg "$1"
	}

aurinstall() { \
	echo "AUR Installing $1, $2 "
	echo "$aurinstalled" | grep -q "^$1$" && return 1
	sudo -u "$name" $aurhelper -S --noconfirm "$1" >/dev/null 2>&1
	}

installationloop() { \
	([ -f "$progsfile" ] && cp "$progsfile" /tmp/progs.csv) || curl -Ls "$progsfile" | sed '/^#/d' > /tmp/progs.csv
	aurinstalled=$(pacman -Qqm)
	while IFS=, read -r tag program comment; do
		n=$((n+1))
		echo "$comment" | grep -q "^\".*\"$" && comment="$(echo "$comment" | sed "s/\(^\"\|\"$\)//g")"
		case "$tag" in
			"A") aurinstall "$program" "$comment" ;;
			*) maininstall "$program" "$comment" ;;
		esac
	done < /tmp/progs.csv ;}

putgitrepo() { # Downloads a gitrepo $1 and places the files in $2 only overwriting conflicts
	echo "Downloading and installing config files..."
	[ -z "$3" ] && branch="master" || branch="$repobranch"
	dir=$(mktemp -d)
	[ ! -d "$2" ] && mkdir -p "$2"
	chown "$name":wheel "$dir" "$2"
	sudo -u "$name" git clone --recursive -b "$branch" --depth 1 --recurse-submodules "$1" "$dir" >/dev/null 2>&1
	sudo -u "$name" cp -rfT "$dir" "$2"
	}

finalize() { echo "All done! Congrats! The script completed successfully."; }




### THE ACTUAL SCRIPT ###

welcomemsg # Welcome message

refreshkeys || error "Error automatically refreshing Arch keyring. Consider doing so manually." # Refresh Arch keyrings.

for x in curl base-devel git ntp zsh; do
	echo "Installing $x to configure the system."
	installpkg "$x"
done

echo "Synchronizing system time to ensure secure installation..."
ntpdate 0.us.pool.ntp.org >/dev/null 2>&1

[ -f /etc/sudoers.pacnew ] && cp /etc/sudoers.pacnew /etc/sudoers # Just in case

newperms "%wheel ALL=(ALL) NOPASSWD: ALL" # Allow user to run sudo without password. Since AUR programs must be installed

grep -q "^Color" /etc/pacman.conf || sed -i "s/^#Color$/Color/" /etc/pacman.conf # Make pacman and trizen colorful

sed -i "s/-j2/-j$(nproc)/;s/^#MAKEFLAGS/MAKEFLAGS/" /etc/makepkg.conf # Use all cores for compilation.

manualinstall $aurhelper || error "Failed to install AUR helper."

installationloop # The command that does all the install using the progs.csv file.

putgitrepo "$dotfilesrepo" "/home/$name" "$repobranch" # Install the dotfiles in the user's home directory

chsh -s /bin/zsh "$name" >/dev/null 2>&1 # Make zsh the default shell for the user.

finalize # Last message! Install complete!

echo "Press enter to exit."; read -r
